{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","todoList","activeItem","id","title","completed","editing","fetchTasks","bind","handleChange","handleSubmit","getCookie","startEdit","deleteItem","strikeUnStrike","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","this","console","log","fetch","then","res","json","data","setState","e","target","value","preventDefault","csrftoken","url","method","headers","body","JSON","stringify","catch","err","task","tasks","self","className","onSubmit","style","flex","onChange","type","placeholder","map","index","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7a4030a0.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       todoList: [],\n       activeItem: {\n         id: null,\n         title: '',\n         completed: false\n       },\n       editing: false\n    }\n\n    this.fetchTasks = this.fetchTasks.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.getCookie = this.getCookie.bind(this)\n    this.startEdit = this.startEdit.bind(this)\n    this.deleteItem = this.deleteItem.bind(this)\n    this.strikeUnStrike = this.strikeUnStrike.bind(this)\n  }\n\n  getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\n  componentDidMount(){\n    this.fetchTasks()\n  }\n\n  fetchTasks(){\n    console.log('Fetching..');\n\n    fetch('http://127.0.0.1:8000/api/task-list/')\n    .then(res => res.json())\n    .then(data => (\n      this.setState({\n        todoList: data\n      })\n    )\n      )\n  }\n\n  handleChange(e){\n    var name = e.target.name\n    var value = e.target.value\n\n    console.log('Name:', name)\n    console.log('Value:', value);\n\n    this.setState({\n      activeItem: {\n        ...this.state.activeItem,\n        title: value\n      }\n    })\n  }\n\n  handleSubmit(e){\n    e.preventDefault()\n    console.log('Item', this.state.activeItem);\n\n    var csrftoken = this.getCookie('csrftoken')\n\n    var url = 'http://127.0.0.1:8000/api/task-create/'\n\n    if(this.state.editing == true){\n      url = `http://127.0.0.1:8000/api/task-update/${this.state.activeItem.id}/`\n      this.setState({\n        editing: false\n      })\n    }\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken,\n      },\n      body: JSON.stringify(this.state.activeItem)\n      }).then(res => {\n        this.fetchTasks()\n        this.setState({\n          activeItem: {\n            id: null,\n            title: '',\n            completed: false\n          }\n        })\n      }).catch(err => (\n        console.log('Error:', err)\n      ))\n  }\n  \n  startEdit(task){\n    this.setState({\n      activeItem: task,\n      editing: true\n    })\n  }\n\n  deleteItem(task){\n    var csrftoken = this.getCookie('csrftoken')\n\n    fetch(`http://127.0.0.1:8000/api/task-delete/${task.id}/`,{\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken,\n      }\n    }).then(res => {\n      this.fetchTasks()\n    })\n  }\n\n  strikeUnStrike(task){\n    task.completed = !task.completed\n\n    console.log('Task:', task.completed);\n\n    var csrftoken = this.getCookie('csrftoken')\n    var url = `http://127.0.0.1:8000/api/task-update/${task.id}/`\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken,\n      },\n      body: JSON.stringify({\n        'completed': task.completed, \n        'title': task.title\n      })\n    }).then(() => {\n      this.fetchTasks()\n    })\n\n\n  }\n\n  render(){\n\n    var tasks = this.state.todoList\n    var self = this\n\n    return (\n\n      <div className=\"container\">\n        <div id=\"task-container\">\n          <div id=\"form-wrapper\">\n            <form onSubmit={this.handleSubmit} id=\"form\">\n\t\t\t\t\t    <div className=\"flex-wrapper\">\n\t\t\t\t\t\t    <div style={{flex: 6}}>\n\t\t\t\t\t\t\t    <input onChange={this.handleChange} id=\"title\" className=\"form-control\" type=\"text\" value={this.state.activeItem.title} name=\"title\" placeholder=\"Add task..\" />\n\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t    <div style={{flex: 1}}>\n                <input id=\"submit\" className=\"btn btn-warning\" type=\"submit\" name=\"Add\" />\n\t\t\t\t\t\t    </div>\n\t\t\t\t\t   </div>\n\t\t\t\t    </form>\n          </div>\n          <div id=\"list-wrapper\">\n              {tasks.map(function(task, index){\n                return (\n                  <div key={index} className=\"task-wrapper flex-wrapper\">\n\n                      <div onClick={() => self.strikeUnStrike(task)} style={{flex:7}}>\n                        {task.completed == false ? (\n                          <span>{task.title}</span>\n                        ) : (\n                          <strike>{task.title}</strike>\n                        )}\n                        \n                      </div>\n\n                      <div style={{flex:1}}>\n                        <button onClick={() => self.startEdit(task)} className=\"btn btn-sm btn-outline-info\">Edit</button>\n                      </div>\n\n                      <div style={{flex:1}}>\n                      <button onClick={() => self.deleteItem(task)} className=\"btn btn-sm btn-outline-dark delete\">Delete</button>\n                      </div>\n\n                  </div>\n                )\n              })}\n          </div> \n\n        </div>\n\n      </div>\n\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}